(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addCityInHistory = undefined;

var _request = require('./request');

var historyCity = document.querySelector('#history');
var favorite = document.querySelector('#favorite');
var session = window.sessionStorage.getItem('history');
var local = window.localStorage.getItem('favorite');
historyCity.innerHTML = session !== null ? session : '\u0418\u0441\u0442\u043E\u0440\u0438\u044F \u043F\u043E\u0438\u0441\u043A\u0430:';
favorite.innerHTML = local !== null ? local : '\u0418\u0437\u0431\u0440\u0430\u043D\u043D\u043E\u0435:';

document.body.addEventListener('click', function (e) {
  if (!e.target.closest('#star')) return;
  e.preventDefault();
  if (stage.city && stage.city !== 'None') {
    deleteSameFavorite(stage.city);
    addFavorite(stage.city);
    checkQuantity(document.querySelectorAll('.favorite'));
  }
});
document.body.addEventListener('click', function (e) {
  if (!e.target.matches('.close')) return;
  e.preventDefault();
  var elem = e.target.parentNode;
  elem.parentNode.removeChild(elem);
  window.localStorage.setItem('favorite', favorite.innerHTML);
});

document.body.addEventListener('click', function (e) {
  if (e.target.closest('.favorite') && !e.target.matches('.close')) {
    e.preventDefault();
    (0, _request.requestCoords)(e.target.closest('.favorite').innerHTML.match(/<span>(.+?)<\/span>/)[1]);
  }
  if (e.target.matches('.history')) {
    e.preventDefault();
    (0, _request.requestCoords)(e.target.innerText);
  }
});

function addFavorite(city) {
  var div = document.createElement('div');
  div.classList.add('favorite');
  div.innerHTML = '<span>' + city + '</span> <button class="close">&#215;</button>';
  favorite.insertBefore(div, favorite.firstElementChild);
  window.localStorage.setItem('favorite', favorite.innerHTML);
};

function checkQuantity(elements) {
  if (elements.length > 5) {
    var last = elements[elements.length - 1];
    last.parentNode.removeChild(last);
  }
};

function deleteSameFavorite(str) {
  var favorites = document.querySelectorAll('.favorite');
  if (favorites.length > 0) {
    favorites.findIndex = [].findIndex;
    var index = favorites.findIndex(function (favorite) {
      var result = favorite.innerHTML.match(/<span>(.+?)<\/span>/)[1];
      if (result === str) return 1;
    });
    if (index !== -1) {
      favorites[index].parentNode.removeChild(favorites[index]);
    };
  }
};

function addCityInHistory(city) {
  var histories = document.querySelectorAll('.history');
  var div = document.createElement('div');
  if (histories.length > 0) {
    histories.findIndex = [].findIndex;
    var index = histories.findIndex(function (elem) {
      if (elem.innerText === city) return 1;
    });
    if (index !== -1) {
      histories[index].parentNode.removeChild(histories[index]);
    };
  }
  div.classList.add('history');
  div.innerText = city;
  historyCity.insertBefore(div, historyCity.firstElementChild);
  checkQuantity(document.querySelectorAll('.history'));
  window.sessionStorage.setItem('history', historyCity.innerHTML);
};
exports.addCityInHistory = addCityInHistory;

},{"./request":3}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
function EventBus() {
  this.event = {};
};

EventBus.prototype.on = function (str, cb) {
  if (str in this.event) {
    this.event[str].push(cb);
  } else {
    this.event[str] = [cb];
  }
};

EventBus.prototype.off = function (str, cb) {
  if (this.event[str]) {
    if (cb) {
      var number = void 0;
      this.event[str].forEach(function (func, i) {
        if (func === cb) number = i;
      });
      this.event[str].splice(number, 1);
      return;
    }
    delete this.event[str];
  }
};

EventBus.prototype.trigger = function (str) {
  if (str in this.event) {
    var arr = arguments;
    this.event[str].forEach(function (cb) {
      arr.slice = [].slice;
      cb.apply(this, arr.slice(1));
    });
  }
};

EventBus.prototype.once = function (str, cb) {
  var self = this;
  function temp() {
    cb.apply(this, arguments);
    self.off(str, temp);
  }
  this.on(str, temp);
};

var eb = new EventBus();
exports.newEb = eb;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestCityName = exports.requestWeather = exports.requestCoords = undefined;

var _observer = require("./observer");

var _script = require("./script");

var _local = require("./local");

var inputs = document.querySelectorAll(".http");

function defineRequest() {
  inputs.forEach(function (input) {
    if (input.checked) stage.request = input.value;
  });
}

defineRequest();

document.body.addEventListener("change", function (e) {
  if (!e.target.matches(".http")) return;
  defineRequest();
});

function getThroughXhr(url, name) {
  var xhr = new XMLHttpRequest();
  var str = url;
  xhr.open("GET", str, true);
  xhr.onload = function () {
    cameRespone(name, this.responseText);
  };
  xhr.onerror = function () {
    alert("\u041E\u0448\u0438\u0431\u043A\u0430 " + this.status);
  };
  xhr.send();
}

function getThroughFetch(url, name) {
  fetch(url, { method: "GET" }).then(function (response) {
    return response.text();
  }, function (response) {
    alert("\u041E\u0448\u0438\u0431\u043A\u0430 " + response.status);
  }).then(function (result) {
    cameRespone(name, result);
  });
}

function doRequest() {
  if (stage.request === "XHR") getThroughXhr.apply(this, arguments);
  if (stage.request === "fetch") getThroughFetch.apply(this, arguments);
}

var cameRespone = function cameRespone(name, respone) {
  if (name === "weather") getWeather(respone);
  if (name === "city") getCityName(respone);
  if (name === "coords") getCoords(respone);
};

function requestWeather() {
  var url = "https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/ce0eb7ffaebe7c0f840beaf1c15f1c00/" + stage.coords[0] + "," + stage.coords[1] + "?lang=ru&units=si";
  // let url = `http://cors-proxy.htmldriven.com/?url=https://api.darksky.net/forecast/ce0eb7ffaebe7c0f840beaf1c15f1c00/${stage.coords[0]},${stage.coords[1]}?lang=ru%26units=si`;
  doRequest(url, "weather");
}

function getWeather(respone) {
  var obj = JSON.parse(respone);
  // let obj = JSON.parse(JSON.parse(respone).body);
  var i = obj.hourly.data.findIndex(function (obj) {
    return obj.time >= Date.now() / 1000;
  });
  i = i ? --i : i;
  var weath = obj.hourly.data[i];
  var div = document.querySelector("#weather").children[1];
  div.innerText = "\u041F\u043E\u0433\u043E\u0434\u0430:\n" + weath.summary + "\n\u0422\u0435\u043C\u043F\u0435\u0440\u0430\u0442\u0443\u0440\u0430: " + weath.apparentTemperature + "\xB0\u0421\n\u0412\u043B\u0430\u0436\u043D\u043E\u0441\u0442\u044C: " + weath.humidity * 100 + "%\n\u0412\u0435\u0442\u0435\u0440: " + weath.windSpeed + "\u043C/\u0441\n\u0414\u0430\u0432\u043B\u0435\u043D\u0438\u0435: " + weath.pressure * 100 + "\u041F\u0430";
};

function requestCityName() {
  var url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + (stage.coords[0] + 0.001) + "," + (stage.coords[1] + 0.001) + "&result_type=locality&key=AIzaSyBFl2Chh3nLWZ-bVlsSPiH_Q1o7f1x6cpg";
  doRequest(url, "city");
}

function getCityName(respone) {
  var obj = JSON.parse(respone);
  stage.city = obj.status !== "OK" ? "None" : obj.results[0].address_components[0].long_name;
  var div = document.querySelector("#weather").children[0];
  div.innerText = "\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442: " + stage.city + "\n";
}

function requestCoords(city) {
  var url = "https://maps.googleapis.com/maps/api/geocode/json?address=" + city + "&key=AIzaSyBFl2Chh3nLWZ-bVlsSPiH_Q1o7f1x6cpg";
  doRequest(url, "coords");
}

function getCoords(respone) {
  var obj = JSON.parse(respone);
  if (obj.status !== "OK") return;
  stage.coords = [obj.results[0].geometry.location.lat, obj.results[0].geometry.location.lng];
  stage.city = obj.results[0].address_components[0].long_name;
  (0, _script.refreshCoords)();
  (0, _local.addCityInHistory)(stage.city);
}

exports.requestCoords = requestCoords;
exports.requestWeather = requestWeather;
exports.requestCityName = requestCityName;

},{"./local":1,"./observer":2,"./script":5}],4:[function(require,module,exports){
"use strict";

var _request = require("./request");

var _script = require("./script");

document.body.addEventListener("click", function (e) {
  if (!e.target.matches(".route")) return;
  e.preventDefault();
  if (e.target.innerText === "Main") {
    window.location.hash = "";
    return;
  }
  window.location.hash = e.target.innerText;
});
var route = {
  routes: [],
  interpret: function interpret(hash) {
    var result = void 0;
    this.routes.forEach(function (iroute) {
      if (typeof iroute.match === "string" && iroute.match === hash) {
        result = iroute;
      }
      if (typeof iroute.match === "object" && iroute.match instanceof RegExp && hash.match(iroute.match) !== null) {
        iroute.param = hash.match(iroute.match);
        result = iroute;
      }
      if (typeof iroute.match === "function" && iroute.match(hash)) {
        route.param = hash;
        result = iroute;
      }
    });

    return result;
  },
  start: function start() {
    window.addEventListener("hashchange", function (e) {
      var oldHash = e.oldURL.match(/#(.+)/);
      var newHash = e.newURL.match(/#(.+)/);
      if (oldHash !== null) {
        oldHash = oldHash[1];
      } else {
        oldHash = "";
      };
      if (newHash !== null) {
        newHash = newHash[1];
      } else {
        newHash = "";
      };
      route.change(oldHash, newHash);
    });
    this.change("", window.location.hash.slice(1));
  },
  change: function change(oldHash, newHash) {
    var iroute = route.interpret(oldHash);
    if (!iroute) return console.error("interpret(oldHash) \u043D\u0435 \u043D\u0430\u0448\u0451\u043B route!");
    if (typeof iroute.onLeave === "function") {
      Promise.resolve(iroute.param).then(iroute.onLeave);
    }
    iroute = route.interpret(newHash);
    if (!iroute) return console.error("interpret(newHash) \u043D\u0435 \u043D\u0430\u0448\u0451\u043B route!");
    if (typeof iroute.onEnter === "function") {
      Promise.resolve(iroute.param).then(iroute.onEnter);
    }
    if (typeof iroute.onBefore === "function") {
      Promise.resolve(iroute.param).then(iroute.onBefore);
    }
  }
};
var allHideElem = document.querySelectorAll(".hide");
var about = document.querySelector(".about");
var author = document.querySelector(".author");
route.routes = [{
  name: "about",
  match: "About",
  onEnter: function onEnter() {
    about.innerText = "\n        \u0414\u0430\u043D\u043D\u043E\u0435 \u0432\u0435\u0431-\u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0435 \u043F\u043E\u043C\u043E\u0436\u0435\u0442 \u0432\u0430\u043C \u0443\u0437\u043D\u0430\u0442\u044C \u043F\u043E\u0433\u043E\u0434\u0443 \u0432 \u043B\u044E\u0431\u043E\u043C \u043C\u0435\u0441\u0442\u0435 \u0438 \u043F\u043E \u0432\u0441\u0435\u043C\u0443 \u043C\u0438\u0440\u0443.\n\n        \u0412 \u0432\u0435\u0440\u0445\u043D\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u044B \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043A\u043D\u043E\u043F\u043A\u0438 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043F\u043E \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u044E (About, Main, Author), \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0430\u0442\u0435\u043B\u044C \u0440\u0435\u0436\u0438\u043C\u0430 HTTP-\u0437\u0430\u043F\u0440\u043E\u0441\u0430 (\u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043E\u0431\u044A\u0435\u043A\u0442\u0430 XMLHttpRequest \u0438\u043B\u0438 \u043C\u0435\u0442\u043E\u0434\u0430 fetch) \u0438 \u043E\u043A\u043D\u043E \u043F\u043E\u0438\u0441\u043A\u0430 \u043E\u0431\u044A\u0435\u043A\u0442\u043E\u0432 \u043D\u0430 \u043A\u0430\u0440\u0442\u0435.\n        \u0412 \u0446\u0435\u043D\u0442\u0440\u0430\u043B\u044C\u043D\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044F \u042F\u043D\u0434\u0435\u043A\u0441 \u043A\u0430\u0440\u0442\u0430. \u041F\u0435\u0440\u0435\u043C\u0435\u0449\u0435\u043D\u0438\u0435 \u043F\u043E \u043A\u0430\u0440\u0442\u0435 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0441\u044F \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043C\u044B\u0448\u0438 \u0441 \u0437\u0430\u0436\u0430\u0442\u043E\u0439 \u043B\u0435\u0432\u043E\u0439 \u043A\u043D\u043E\u043F\u043A\u043E\u0439, \u0437\u0443\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 - \u043A\u043E\u043B\u0435\u0441\u043E \u043C\u044B\u0448\u0438 \u0438\u043B\u0438 \u043F\u0430\u043B\u0437\u0443\u043D\u043E\u043A \u0432 \u043B\u0435\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u044D\u043A\u0440\u0430\u043D\u0430. \u041A\u043D\u043E\u043F\u043A\u0430 \"\u0437\u0432\u0435\u0437\u0434\u043E\u0447\u043A\u0430\" - \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u0442 \u043D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442 \u0432 \u0431\u043B\u043E\u043A \"\u0438\u0437\u0431\u0440\u0430\u043D\u043D\u043E\u0435\".\n        \u0412 \u043D\u0438\u0436\u043D\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u044F \u0432\u044B \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0442\u0440\u0438 \u0431\u043B\u043E\u043A\u0430 - \"\u0438\u0441\u0442\u043E\u0440\u0438\u044F \u043F\u043E\u0438\u0441\u043A\u0430\", \u043F\u0440\u043E\u0433\u043D\u043E\u0437 \u043F\u043E\u0433\u043E\u0434\u044B \u0438 \"\u0438\u0437\u0431\u0440\u0430\u043D\u043D\u043E\u0435\". \u0411\u043B\u043E\u043A \"\u0438\u0441\u0442\u043E\u0440\u0438\u044F \u043F\u043E\u0438\u0441\u043A\u0430\" \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0445 \u043F\u044F\u0442\u0438 \u043D\u0430\u0439\u0434\u0435\u043D\u043D\u044B\u0445 \u043D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0445 \u043F\u0443\u043D\u043A\u0442\u043E\u0432. \u0411\u043B\u043E\u043A \u043F\u0440\u043E\u0433\u043D\u043E\u0437\u0430 \u043F\u043E\u0433\u043E\u0434\u044B \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442, \u0440\u0430\u0441\u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044B\u0439 \u0432 \u0446\u0435\u043D\u0442\u0440\u0435 \u043A\u0430\u0440\u0442\u044B \u0438 \u0442\u0435\u043A\u0443\u0449\u0443\u044E \u043F\u043E\u0433\u043E\u0434\u0443 \u044D\u0442\u043E\u0433\u043E \u043D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u043E\u0433\u043E \u043F\u0443\u043D\u043A\u0430. \u0411\u043B\u043E\u043A \"\u0438\u0437\u0431\u0440\u0430\u043D\u043D\u043E\u0435\" \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0435 \u043F\u0443\u043D\u043A\u0442\u044B, \u043E\u0442\u043C\u0435\u0447\u0435\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u043C.\n        \u0422\u0430\u043A\u0436\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F \u043F\u043E\u0438\u0441\u043A \u0433\u043E\u0440\u043E\u0434\u0430 \u0447\u0435\u0440\u0435\u0437 url, \u0434\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0432 \u043A\u043E\u043D\u0446\u0435 url \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443 \"#city(\u043B\u044E\u0431\u043E\u0439 \u0441\u0438\u043C\u0432\u043E\u043B)\u043D\u0430\u0437\u0432\u0430\u043D\u0438\u0435_\u0433\u043E\u0440\u043E\u0434\u0430\", \u0434\u043B\u044F \u043F\u0440\u0438\u043C\u0435\u0440\u0430 \"#city&Minsk\". \u042D\u0442\u043E \u0441\u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0430\u043D\u0430\u043B\u043E\u0433\u0438\u0447\u043D\u044B\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C, \u043A\u0430\u043A \u0438 \u0447\u0435\u0440\u0435\u0437 \u043E\u043A\u043D\u043E \u043F\u043E\u0438\u0441\u043A\u0430 \u043E\u0431\u044A\u0435\u043A\u0442\u043E\u0432 \u043D\u0430 \u043A\u0430\u0440\u0442\u0435.\n\n        \u0421\u043F\u0430\u0441\u0438\u0431\u043E \u043A\u043E\u043C\u043F\u0430\u043D\u0438\u044F\u043C Yandex \u0438 Google \u0437\u0430 \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u0438\u0435 API maps \u0438 \u0434\u0430\u043D\u043D\u044B\u0445 \u0433\u0435\u043E\u043B\u043E\u043A\u0430\u0446\u0438\u0438, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0441\u0430\u0439\u0442\u0443 darksky.net \u0437\u0430 \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u0440\u043E\u0433\u043D\u043E\u0437\u0430 \u043F\u043E\u0433\u043E\u0434\u044B.\n      ";
  },
  onLeave: function onLeave() {
    about.innerHTML = "";
  }
}, {
  name: "author",
  match: "Author",
  onEnter: function onEnter() {
    author.innerHTML = "\n        <span>\u0410\u0432\u0442\u043E\u0440: \u0421\u0435\u0440\u0433\u0435\u0439 \u0415\u0440\u043C\u043E\u043B\u0435\u043D\u043A\u043E</span>\n        <img src=\"other/ava.jpg\" alt=\"\">\n        <ul>\n          <li>\n            <a href=\"https://github.com/SYarmolenka\" class=\"gh\"></a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/jibickih\" class=\"fb\"></a>\n          </li>\n          <li>\n            <a href=\"https://vvscode.slack.com/messages/D7YRE6JV9/\" class=\"sl\"></a>\n          </li>\n        </ul>\n      ";
  },
  onLeave: function onLeave() {
    author.innerHTML = "";
  }
}, {
  name: "cityName",
  match: /city\W(\b\w+\b)/,
  onEnter: function onEnter(arr) {
    (0, _request.requestCoords)(arr[1]);
  }
}, {
  name: "main",
  match: /(-?\d+.?\d*),(-?\d+.?\d*)&zoom=(\d+)/,
  onEnter: function onEnter(arr) {
    stage.coords = [+arr[1], +arr[2]];
    stage.zoom = +arr[3];
    allHideElem.forEach(function (elem) {
      elem.classList.remove("hide");
    });
    if (!myMap) {
      ymaps.ready(_script.init).then(function () {
        (0, _request.requestWeather)();
        (0, _request.requestCityName)();
      });
    } else {
      (0, _script.refreshMap)();
    }
  },
  onLeave: function onLeave() {
    allHideElem.forEach(function (elem) {
      elem.classList.add("hide");
    });
  }
}, {
  name: "index",
  match: function match(hash) {
    return hash === "";
  },
  onEnter: function onEnter() {
    fetch("https://api.userinfo.io/userinfos", { method: "GET" }).then(function (response) {
      return response.text();
    }, function (response) {
      alert("\u041E\u0448\u0438\u0431\u043A\u0430 " + response.status);
    }).then(function (result) {
      var data = JSON.parse(result);
      stage.coords = [data.position.latitude, data.position.longitude];
      stage.zoom = 10;
      (0, _script.refreshCoords)();
    });
  }
}];

route.start();

},{"./request":3,"./script":5}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = exports.refreshCoords = exports.refreshMap = undefined;

var _request = require('./request');

function init() {
  myMap = new ymaps.Map('map', {
    center: stage.coords,
    zoom: stage.zoom,
    controls: ['zoomControl']
  });
  myMap.events.add('actionend', function () {
    Promise.resolve().then(function () {
      stage.coords = myMap.getCenter();
      stage.zoom = myMap.getZoom();
    }).then(refreshCoords);
  });
}

function refreshMap() {
  offsetMap(stage.zoom, stage.coords);
  (0, _request.requestWeather)();
  (0, _request.requestCityName)();
}

function refreshCoords() {
  window.location.hash = stage.coords[0] + ',' + stage.coords[1] + '&zoom=' + stage.zoom;
}

function offsetMap(zoom, coords) {
  myMap.setCenter(coords, zoom);
  return coords;
}

document.body.addEventListener('keypress', function (e) {
  if (e.keyCode != 13 || !e.target.matches('#search>input')) return;
  (0, _request.requestCoords)(e.target.value);
  e.target.value = '';
});

document.body.addEventListener('click', function (e) {
  if (!e.target.matches('#button')) return;
  e.preventDefault();
  (0, _request.requestCoords)(e.target.previousElementSibling.value);
  e.target.previousElementSibling.value = '';
});

exports.refreshMap = refreshMap;
exports.refreshCoords = refreshCoords;
exports.init = init;

},{"./request":3}]},{},[1,2,3,4,5]);
