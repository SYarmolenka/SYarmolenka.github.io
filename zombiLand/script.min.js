(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
function EventBus() {
  this.event = {};
};

EventBus.prototype.on = function (str, cb) {
  if (str in this.event) {
    this.event[str].push(cb);
  } else {
    this.event[str] = [cb];
  }
};

EventBus.prototype.off = function (str, cb) {
  if (this.event[str]) {
    if (cb) {
      var number = void 0;
      this.event[str].forEach(function (func, i) {
        if (func === cb) number = i;
      });
      this.event[str].splice(number, 1);
      return;
    }
    delete this.event[str];
  }
};

EventBus.prototype.trigger = function (str) {
  if (str in this.event) {
    var arr = arguments;
    this.event[str].forEach(function (cb) {
      arr.slice = [].slice;
      cb.apply(this, arr.slice(1));
    });
  }
};

EventBus.prototype.once = function (str, cb) {
  var self = this;
  var temp = function temp() {
    cb.apply(this, arguments);
    self.off(str, temp);
  };
  this.on(str, temp);
};

exports.EventBus = EventBus;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Field = function () {
  function Field(width, height) {
    _classCallCheck(this, Field);

    if (width > 0 && height > 0) {
      this.static = 1;
      this.width = width;
      this.height = height;
    }
    this.x0 = this.y0 = 0;
    this.createMain();
  }

  _createClass(Field, [{
    key: "createMain",
    value: function createMain() {
      this.main = document.createElement("main");
      document.body.appendChild(this.main);
      this.main.innerHTML = "<canvas id=\"field\"></canvas>";
      this.canvas = document.getElementById("field");
      this.ctx = this.canvas.getContext("2d");
      if (this.static) {
        this.canvas.width = this.width;
        this.canvas.height = this.height;
      } else {
        this.resize();
        this.events();
      };
    }
  }, {
    key: "createMobileButtons",
    value: function createMobileButtons() {
      var _this = this;

      var arr = ["up", "down", "left", "right"];
      for (var i = 0; i < 4; i++) {
        var div = document.createElement("div");
        div.classList.add("mobile");
        div.classList.add(arr[i]);
        this.main.appendChild(div);
      }
      this.blocks = document.querySelectorAll(".mobile");

      this.blocks.forEach(function (div) {
        if (div.classList.contains("up")) {
          div.style.top = "50px";
          div.style.left = _this.width * 0.3 + "px";
          div.style.height = (_this.height - 50) / 2 + "px";
          div.style.width = _this.width * 0.4 + "px";
        };
        if (div.classList.contains("down")) {
          div.style.top = (_this.height - 50) / 2 + 50 + "px";
          div.style.left = _this.width * 0.3 + "px";
          div.style.height = (_this.height - 50) / 2 + "px";
          div.style.width = _this.width * 0.4 + "px";
        }
        if (div.classList.contains("left")) {
          div.style.top = "0";
          div.style.left = "0";
          div.style.height = _this.height + "px";
          div.style.width = _this.width * 0.3 + "px";
        }
        if (div.classList.contains("right")) {
          div.style.top = "0";
          div.style.left = _this.width * 0.7 + "px";
          div.style.height = _this.height + "px";
          div.style.width = _this.width * 0.3 + "px";
        }
      });
    }
  }, {
    key: "resize",
    value: function resize() {
      this.width = this.canvas.width = document.documentElement.clientWidth;
      this.height = this.canvas.height = document.documentElement.clientHeight;
      if (this.blocks && this.blocks.length > 0) {
        this.blocks.forEach(function (div) {
          return div.parentNode.removeChild(div);
        });
        this.createMobileButtons();
      };
    }
  }, {
    key: "events",
    value: function events() {
      window.addEventListener("resize", this.resize.bind(this));
    }
  }, {
    key: "delete",
    value: function _delete() {
      this.main.parentNode.removeChild(this.main);
    }
  }]);

  return Field;
}();

exports.Field = Field;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Game = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _route = require("./route");

var _script = require("./script");

var _zombie = require("./zombie1");

var _zombie2 = require("./zombie2");

var _message = require("./message");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Game = function () {
  function Game(interval, zone, speed) {
    _classCallCheck(this, Game);

    this.interval = interval;
    this.zombieActionZone = zone;
    this.zombieTurboSpeed = speed;
    this.allObject = [];
    this.allReplayObject = [];
    this.tick = 0;
  }

  _createClass(Game, [{
    key: "refresh",
    value: function refresh() {
      _route.field.ctx.clearRect(0, 0, _route.field.width, _route.field.height);
      _route.eb.trigger("tick");
      this.tick++;
    }
  }, {
    key: "start",
    value: function start() {
      var _this = this;

      this.time = Date.now();
      var run = function run(_) {
        _this.timer = setTimeout(run, _this.interval);
        _this.refresh();
      };
      this.timer = setTimeout(run, this.interval);
      this.run = 1;
      _route.eb.on("tick", this.addZombie.bind(this));
    }
  }, {
    key: "stop",
    value: function stop() {
      clearTimeout(this.timer);
      _route.eb.off("tick");
      this.run = 0;
      this.tick = 0;
      if (this.play !== "replay") {
        new _message.Message(Date.now() - this.time);
        this.field = [_route.field.width, _route.field.height];
      };
    }
  }, {
    key: "addZombie",
    value: function addZombie() {
      if (this.tick !== 0 && this.tick % 60 === 0) {
        if (this.play === "replay") {
          var first = this.replay.zombie1[0][0];
          this.allReplayObject.push(new _zombie.Zombie1([first.x, first.y, first.corner, first.speed]));
          this.replay.zombie1.shift();
        } else {
          this.allObject.push(new _zombie.Zombie1([(0, _script.checkRandomForHero)(0, _route.field.width, "x"), (0, _script.checkRandomForHero)(0, _route.field.height, "y"), (0, _script.randomNumber)(0, 360), (0, _script.randomNumber)(2, 10)]));
        };
      };
      if (this.tick !== 0 && this.tick % 110 === 0) {
        if (this.play === "replay") {
          var _first = this.replay.zombie2[0][0];
          this.allReplayObject.push(new _zombie2.Zombie2([_first.x, _first.y, _first.corner, _first.speed]));
          this.replay.zombie2.shift();
        } else {
          this.allObject.push(new _zombie2.Zombie2([(0, _script.checkRandomForHero)(0, _route.field.width, "x"), (0, _script.checkRandomForHero)(0, _route.field.height, "y"), (0, _script.randomNumber)(0, 360), (0, _script.randomNumber)(2, 6)]));
        }
      };
    }
  }]);

  return Game;
}();

exports.Game = Game;

},{"./message":7,"./route":9,"./script":10,"./zombie1":11,"./zombie2":12}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Header = function () {
  function Header() {
    _classCallCheck(this, Header);

    this.create();
  }

  _createClass(Header, [{
    key: "create",
    value: function create() {
      var header = document.createElement("header");
      header.id = "header";
      header.innerHTML = "\n    <ul id=\"spa\">\n      <li><a class=\"spa\" href=\"#main\">Main</a></li>\n      <li><a class=\"spa\" href=\"#game\">Game</a></li>\n      <li><a class=\"spa\" href=\"#history\">History</a></li>\n    </ul>\n    ";
      document.body.appendChild(header);
    }
  }]);

  return Header;
}();

exports.Header = Header;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hero = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _person = require("./person");

var _route = require("./route");

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Hero = function (_Person) {
  _inherits(Hero, _Person);

  function Hero(args) {
    var _ref;

    _classCallCheck(this, Hero);

    var _this = _possibleConstructorReturn(this, (_ref = Hero.__proto__ || Object.getPrototypeOf(Hero)).call.apply(_ref, [this].concat(_toConsumableArray(args))));

    _this.height = _this.width = 64;
    _this.name = "hero";
    _this.image.src = "../other/hero.png";
    _this.image.onload = function (_) {
      return _route.field.ctx.drawImage(_this.image, 0, 128, 64, 64, _this.x, _this.y, _this.width, _this.height);
    };
    if (!_this.replay) {
      _route.field.createMobileButtons();
      _this.events();
      _route.game.allObject.push(_this);
    } else {
      _route.game.allReplayObject.push(_this);
    }
    return _this;
  }

  _createClass(Hero, [{
    key: "draw",
    value: function draw(corner) {
      var _this2 = this;

      var x = Math.round(this.x);
      var y = Math.round(this.y);
      if (corner < 0) corner = Math.abs(corner);
      if (corner > 360) corner = corner % 360;
      if (corner >= 0 && corner < 45 || corner >= 315 && corner <= 360) _route.field.ctx.drawImage(this.image, this.count * 64, 192, 64, 64, x, y, this.width, this.height);
      if (corner >= 135 && corner < 225) _route.field.ctx.drawImage(this.image, this.count * 64, 64, 64, 64, x, y, this.width, this.height);
      if (corner >= 45 && corner < 135) _route.field.ctx.drawImage(this.image, this.count * 64, 128, 64, 64, x, y, this.width, this.height);
      if (corner >= 225 && corner < 315) _route.field.ctx.drawImage(this.image, this.count * 64, 0, 64, 64, x, y, this.width, this.height);
      this.count++;
      if (this.count >= 9) this.count = 0;
      if (!this.replay) {
        var obj = { x: Math.round(this.x), y: Math.round(this.y), corner: this.corner, speed: this.speed };
        Promise.resolve(obj).then(function (obj) {
          return _this2.history.push(obj);
        });
      }
    }
  }, {
    key: "events",
    value: function events() {
      var _this3 = this;

      document.addEventListener("keydown", function (e) {
        if (e.keyCode < 37 && e.keyCode > 40) return;
        if (e.keyCode === 39) _this3.corner += 22.5; // right
        if (e.keyCode === 37) _this3.corner -= 22.5; // left
        if (e.keyCode === 38) _this3.corner = 270; // down
        if (e.keyCode === 40) _this3.corner = 90; // up
      });
      _route.field.main.addEventListener("click", function (e) {
        if (!e.target.classList.contains("mobile")) return;
        if (e.target.classList.contains("right")) _this3.corner += 22.5;
        if (e.target.classList.contains("left")) _this3.corner -= 22.5;
        if (e.target.classList.contains("up")) _this3.corner = 270;
        if (e.target.classList.contains("down")) _this3.corner = 90;
      });
    }
  }]);

  return Hero;
}(_person.Person);

exports.Hero = Hero;

},{"./person":8,"./route":9}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Leaders = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _route = require("./route");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Leaders = exports.Leaders = function () {
  function Leaders() {
    var _this = this;

    _classCallCheck(this, Leaders);

    Promise.resolve(this.local("leaders")).then(function (res) {
      _this.leaderList = res === null ? [] : res;
    });
  }

  _createClass(Leaders, [{
    key: "newResult",
    value: function newResult(arr) {
      this.leaderList.push(arr);
      this.leaderList.sort(function (a, b) {
        return b.time - a.time;
      });
      window.location.hash = "history";
      if (arr === this.leaderList[0] && _route.game.play !== "replay") this.local("game", this.prepareData(_route.game.allObject));
      this.local("leaders", this.leaderList);
      this.local("field", _route.game.field);
    }
  }, {
    key: "prepareData",
    value: function prepareData(arr) {
      var data = {};
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var obj = _step.value;

          if (obj.name in data) {
            data[obj.name].push(obj.history);
          } else {
            data[obj.name] = [obj.history];
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return data;
    }
  }, {
    key: "local",
    value: function local(name, obj) {
      if (name && obj) {
        var str = JSON.stringify(obj);
        Promise.resolve().then(function (_) {
          window.localStorage.setItem(name, str);
        });
      };
      if (!obj && name) {
        return Promise.resolve().then(function (_) {
          var result = JSON.parse(window.localStorage.getItem(name));
          return result;
        });
      };
    }
  }, {
    key: "showTable",
    value: function showTable() {
      var _this2 = this;

      this.main = document.createElement("main");
      this.main.id = "leaders";
      this.main.innerHTML = "\n    <div id=\"list\">\n      <h1>Best Results</h1>\n    </div>";
      document.body.appendChild(this.main);
      var list = document.querySelector("#list");
      Promise.resolve().then(function (_) {
        _this2.leaderList.forEach(function (obj, i) {
          var div = document.createElement("div");
          div.innerText = obj.name + ":\n        " + obj.time / 1000 + " seconds";
          if (i === 0) div.className = "leader";
          list.appendChild(div);
        });
      });
      this.main.addEventListener("click", function (e) {
        if (!e.target.matches(".leader")) return;
        window.location.hash = "play";
      });
    }
  }, {
    key: "deleteTable",
    value: function deleteTable() {
      this.main.parentNode.removeChild(this.main);
    }
  }]);

  return Leaders;
}();

;

},{"./route":9}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Message = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _route = require("./route");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Message = exports.Message = function () {
  function Message(time) {
    _classCallCheck(this, Message);

    this.width = document.documentElement.clientWidth;
    this.height = document.documentElement.clientHeight;
    this.time = time;
    Promise.resolve().then(this.create.bind(this));
  }

  _createClass(Message, [{
    key: "create",
    value: function create() {
      this.div = document.createElement("div");
      this.div.id = "cover";
      this.div.innerHTML = "\n      <div id=\"message\">\n        <p id=\"time\">Your time: " + this.time / 1000 + " s</p>\n        <input id=\"username\" type=\"text\">\n        <div>\n          <button>OK</button>\n          <button>Cancel</button>\n        </div>\n      </div>\n    ";
      this.div.classList.add("z2");
      document.body.appendChild(this.div);
      this.div.style.top = 0;
      this.div.style.left = 0;
      this.div.style.height = this.height + "px";
      this.div.style.width = this.width + "px";
      var message = this.div.querySelector("#message");
      var coords = message.getBoundingClientRect();
      message.style.top = this.height / 2 - coords.height / 2 + "px";
      message.style.left = this.width / 2 - coords.width / 2 + "px";
      this.events();
    }
  }, {
    key: "events",
    value: function events() {
      var _this = this;

      this.input = this.div.querySelector("#username");
      this.div.addEventListener("click", function (e) {
        if (!e.target.matches("button")) return;
        if (e.target.innerText === "OK") {
          if (_this.input.value === "") return;
          _route.leaders.newResult({ name: _this.input.value, time: _this.time });
          _this.delete();
        }
        if (e.target.innerText === "Cancel") {
          _this.delete();
          window.location.hash = "history";
        };
      });
      this.input.addEventListener("keydown", function (e) {
        if (e.keyCode !== 13 || _this.input.value === "") return;
        if (_this.input.value === "") return;
        _route.leaders.newResult({ name: _this.input.value, time: _this.time });
        _this.delete();
      });
    }
  }, {
    key: "delete",
    value: function _delete() {
      this.div.parentNode.removeChild(this.div);
    }
  }]);

  return Message;
}();

;

},{"./route":9}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Person = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _route = require("./route");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Person = function () {
  function Person() {
    _classCallCheck(this, Person);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    this.x = args[0];
    this.y = args[1];
    this.corner = args[2];
    this.speed = args[3];
    this.replay = args[4];

    this.count = 0;
    this.image = document.createElement("img");
    this.history = [];
    this.replay ? _route.eb.on("tick", this.play.bind(this)) : _route.eb.on("tick", this.step.bind(this));
  }

  _createClass(Person, [{
    key: "step",
    value: function step() {
      var dx = this.speed * Math.cos(this.corner * Math.PI / 180);
      var dy = this.speed * Math.sin(this.corner * Math.PI / 180);
      this.x += dx;
      this.y += dy;
      if (this.x >= _route.field.width) this.x = 1 - this.width;
      if (this.y >= _route.field.height) this.y = 1 - this.height;
      if (this.x + this.width <= 0) this.x = _route.field.width - 1;
      if (this.y + this.height <= 0) this.y = _route.field.height - 1;
      this.draw(this.corner);
    }
  }, {
    key: "play",
    value: function play() {
      if (this.history.length === 1) _route.game.stop();
      this.x = this.history[0].x;
      this.y = this.history[0].y;
      this.draw(this.history[0].corner);
      this.history.shift();
    }
  }]);

  return Person;
}();

exports.Person = Person;

},{"./route":9}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.leaders = exports.hero = exports.game = exports.field = exports.eb = undefined;

var _header = require("./header");

var _field = require("./field");

var _game = require("./game");

var _eb = require("./eb");

var _hero = require("./hero");

var _script = require("./script");

var _leaders = require("./leaders");

var route = {
  routes: [],
  interpret: function interpret(hash) {
    var result = void 0;
    this.routes.forEach(function (iroute) {
      if (typeof iroute.match === "string" && iroute.match === hash) {
        result = iroute;
      }
      if (typeof iroute.match === "object" && iroute.match instanceof RegExp && hash.match(iroute.match) !== null) {
        iroute.param = hash.match(iroute.match);
        result = iroute;
      }
      if (typeof iroute.match === "function" && iroute.match(hash)) {
        route.param = hash;
        result = iroute;
      }
    });

    return result;
  },
  start: function start() {
    window.addEventListener("hashchange", function (e) {
      var oldHash = e.oldURL.match(/#(.+)/);
      var newHash = e.newURL.match(/#(.+)/);
      if (oldHash !== null) {
        oldHash = oldHash[1];
      } else {
        oldHash = "";
      };
      if (newHash !== null) {
        newHash = newHash[1];
      } else {
        newHash = "";
      };
      route.change(oldHash, newHash);
    });
    this.change("", window.location.hash.slice(1));
  },
  change: function change(oldHash, newHash) {
    var iroute = route.interpret(oldHash);
    if (!iroute) {
      console.error("interpret(oldHash) \u043D\u0435 \u043D\u0430\u0448\u0451\u043B route!");
      iroute = route.interpret("");
    };
    if (typeof iroute.onLeave === "function") {
      Promise.resolve(iroute.param).then(iroute.onLeave);
    }
    iroute = route.interpret(newHash);
    if (!iroute) {
      console.error("interpret(newHash) \u043D\u0435 \u043D\u0430\u0448\u0451\u043B route!");
      iroute = route.interpret("");
    };
    this.position = newHash;
    if (typeof iroute.onEnter === "function") {
      Promise.resolve(iroute.param).then(iroute.onEnter);
    }
    if (typeof iroute.onBefore === "function") {
      Promise.resolve(iroute.param).then(iroute.onBefore);
    }
  }
};

new _header.Header();
var eb = exports.eb = new _eb.EventBus();
var field = exports.field = void 0,
    game = exports.game = void 0,
    hero = exports.hero = void 0,
    leaders = exports.leaders = void 0;
exports.leaders = leaders = new _leaders.Leaders();
exports.game = game = new _game.Game(75, 100, 5);
var _run = void 0,
    _run2 = void 0,
    div = void 0;

route.routes = [{
  name: "index",
  match: function match(hash) {
    return hash === "";
  },
  onEnter: function onEnter() {
    window.location.hash = "main";
  }
}, {
  name: "main",
  match: "main",
  onEnter: function onEnter() {
    div = document.createElement("div");
    div.innerText = "Description and rules of the game";
    document.body.appendChild(div);
  },

  onLeave: function onLeave() {
    document.body.removeChild(div);
  }
}, {
  name: "game",
  match: "game",
  onEnter: function onEnter() {
    exports.field = field = new _field.Field();
    exports.hero = hero = new _hero.Hero([(0, _script.randomNumber)(0, 1000), (0, _script.randomNumber)(0, 500), (0, _script.randomNumber)(0, 360), 6]);
    document.addEventListener("keydown", _run = function run(e) {
      if (e.keyCode < 37 || e.keyCode > 40) return;
      if (!game.run) {
        game.start();
        document.removeEventListener("keydown", _run);
      };
    });
    document.body.addEventListener("click", _run2 = function run2(e) {
      if (!e.target.classList.contains("mobile")) return;
      if (!game.run) {
        game.start();
        document.removeEventListener("click", _run2);
      };
    });
  },
  onLeave: function onLeave() {
    if (game.run === 1) game.stop();
    document.removeEventListener("keydown", _run);
    document.body.removeEventListener("click", _run2);
    field.delete();
    eb.off("tick");
    game.allObject.forEach(function (obj) {
      obj = null;
    });
    exports.field = field = null;
    exports.hero = hero = null;
  }
}, {
  name: "history",
  match: "history",
  onEnter: function onEnter() {
    leaders.showTable();
  },
  onLeave: function onLeave() {
    leaders.deleteTable();
  }
}, {
  name: "play",
  match: "play",
  onEnter: function onEnter() {
    Promise.resolve(leaders.local("field")).then(function (arr) {
      exports.field = field = new _field.Field(arr[0], arr[1]);
    });
    Promise.resolve(leaders.local("game")).then(function (obj) {
      game.replay = obj;
      var first = game.replay.hero[0][0];
      exports.hero = hero = new _hero.Hero([first.x, first.y, first.corner, first.speed, 1]);
      game.replay.hero[0].shift();
      hero.history = game.replay.hero[0];
    });
  },
  onBefore: function onBefore() {
    game.play = "replay";
    if (!game.run) game.start();
  },
  onLeave: function onLeave() {
    game.stop();
    eb.off("tick");
    field.delete();
    game.allReplayObject.forEach(function (obj) {
      obj = null;
    });
    game.play = undefined;
    exports.field = field = null;
    exports.hero = hero = null;
  }
}];

route.start();

},{"./eb":1,"./field":2,"./game":3,"./header":4,"./hero":5,"./leaders":6,"./script":10}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomNumber = exports.checkRandomForHero = exports.getCornerByPoints = undefined;

var _route = require("./route");

var randomNumber = function randomNumber(from, to) {
  return Math.round(from + Math.random() * (to - from));
};

var checkRandomForHero = function checkRandomForHero(from, to, axis) {
  var random = randomNumber(from, to);
  if (axis === "x") {
    if (random > _route.hero.x - 100 && random < _route.hero.x + 100) {
      return checkRandomForHero(from, to, "x");
    } else return random;
  };
  if (axis === "y") {
    if (random > _route.hero.y - 100 && random < _route.hero.y + 100) {
      return checkRandomForHero(from, to, "y");
    } else return random;
  };
};

var getCornerByPoints = function getCornerByPoints(x1, x2, y1, y2) {
  var corner = void 0;
  var dX = x1 - x2;
  var dY = y1 - y2;
  var atg = Math.abs(Math.atan(dY / dX) * 180 / Math.PI);
  if (dX <= 0 && dY >= 0) corner = atg;
  if (dX > 0 && dY >= 0) corner = 180 - atg;
  if (dX >= 0 && dY < 0) corner = 180 + atg;
  if (dX < 0 && dY < 0) corner = 360 - atg;
  return corner;
};

exports.getCornerByPoints = getCornerByPoints;
exports.checkRandomForHero = checkRandomForHero;
exports.randomNumber = randomNumber;

},{"./route":9}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Zombie1 = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _person = require("./person");

var _route = require("./route");

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Zombie1 = function (_Person) {
  _inherits(Zombie1, _Person);

  function Zombie1(args) {
    var _ref;

    _classCallCheck(this, Zombie1);

    var _this = _possibleConstructorReturn(this, (_ref = Zombie1.__proto__ || Object.getPrototypeOf(Zombie1)).call.apply(_ref, [this].concat(_toConsumableArray(args))));

    _this.width = 32;
    _this.height = 48;
    _this.name = "zombie1";
    _this.image.src = "../other/zombie1.png";
    _this.image.onload = function (_) {
      return _route.field.ctx.drawImage(_this.image, 0, 0, _this.width, _this.height, _this.x, _this.y, _this.width, _this.height);
    };
    if (!_this.replay) {
      var obj = { x: Math.round(_this.x), y: Math.round(_this.y), corner: _this.corner, speed: _this.speed };
      Promise.resolve(obj).then(function (obj) {
        return _this.history.push(obj);
      });
    }
    return _this;
  }

  _createClass(Zombie1, [{
    key: "draw",
    value: function draw(corner) {
      var x = Math.round(this.x);
      var y = Math.round(this.y);
      if (corner < 0) corner = Math.abs(corner);
      if (corner > 360) corner = corner % 360;
      if (corner >= 0 && corner < 45 || corner >= 315 && corner <= 360) _route.field.ctx.drawImage(this.image, this.count * 32, 96, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 135 && corner < 225) _route.field.ctx.drawImage(this.image, this.count * 32, 48, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 45 && corner < 135) _route.field.ctx.drawImage(this.image, this.count * 32, 0, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 225 && corner < 315) _route.field.ctx.drawImage(this.image, this.count * 32, 144, this.width, this.height, x, y, this.width, this.height);
      this.count++;
      if (this.count >= 4) this.count = 0;
    }
  }, {
    key: "step",
    value: function step() {
      _get(Zombie1.prototype.__proto__ || Object.getPrototypeOf(Zombie1.prototype), "step", this).call(this);
      if (_route.game.play !== "replay" && Math.abs(this.x + this.width / 2 - (_route.hero.x + _route.hero.width / 2)) < 20 && Math.abs(this.y + this.height / 2 - (_route.hero.y + _route.hero.height / 2)) < 20) _route.game.stop();
    }
  }]);

  return Zombie1;
}(_person.Person);

exports.Zombie1 = Zombie1;

},{"./person":8,"./route":9}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Zombie2 = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _route = require("./route");

var _script = require("./script");

var _person = require("./person");

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Zombie2 = function (_Person) {
  _inherits(Zombie2, _Person);

  function Zombie2(args) {
    var _ref;

    _classCallCheck(this, Zombie2);

    var _this = _possibleConstructorReturn(this, (_ref = Zombie2.__proto__ || Object.getPrototypeOf(Zombie2)).call.apply(_ref, [this].concat(_toConsumableArray(args))));

    _this.width = 40;
    _this.height = 56;
    _this.oldSpeed = _this.speed;
    _this.name = "zombie2";
    _this.image.src = "../other/zombie2.png";
    _this.image.onload = function (_) {
      return _route.field.ctx.drawImage(_this.image, 0, 0, _this.width, _this.height, _this.x, _this.y, _this.width, _this.height);
    };
    _this.draw();
    if (!_this.replay) {
      var obj = { x: Math.round(_this.x), y: Math.round(_this.y), corner: _this.corner, speed: _this.speed };
      Promise.resolve(obj).then(function (obj) {
        return _this.history.push(obj);
      });
    }
    return _this;
  }

  _createClass(Zombie2, [{
    key: "draw",
    value: function draw(corner) {
      var x = Math.round(this.x);
      var y = Math.round(this.y);
      if (corner < 0) corner = Math.abs(corner);
      if (corner > 360) corner = corner % 360;
      if (corner >= 0 && corner < 45 || corner >= 315 && corner <= 360) _route.field.ctx.drawImage(this.image, this.count * 40, 112, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 135 && corner < 225) _route.field.ctx.drawImage(this.image, this.count * 40, 56, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 45 && corner < 135) _route.field.ctx.drawImage(this.image, this.count * 40, 0, this.width, this.height, x, y, this.width, this.height);
      if (corner >= 225 && corner < 315) _route.field.ctx.drawImage(this.image, this.count * 40, 168, this.width, this.height, x, y, this.width, this.height);
      this.count++;
      if (this.count >= 4) this.count = 0;
      _route.field.ctx.fillStyle = "rgba(255,255,255,0.05)";
      _route.field.ctx.beginPath();
      _route.field.ctx.moveTo(this.x + this.width / 2 + _route.game.zombieActionZone, this.y + this.height / 2);
      _route.field.ctx.arc(this.x + this.width / 2, this.y + this.height / 2, _route.game.zombieActionZone, 0, Math.PI * 2, true);
      _route.field.ctx.fill();
      _route.field.ctx.closePath();
    }
  }, {
    key: "step",
    value: function step() {
      _get(Zombie2.prototype.__proto__ || Object.getPrototypeOf(Zombie2.prototype), "step", this).call(this);
      var offsetX = this.x + this.width / 2 - (_route.hero.x + _route.hero.width / 2);
      var offsetY = this.y + this.height / 2 - (_route.hero.y + _route.hero.height / 2);
      if (Math.sqrt(Math.abs(offsetX) * Math.abs(offsetX) + Math.abs(offsetY) * Math.abs(offsetY)) < _route.game.zombieActionZone && !this.turbo) {
        this.turbo = true;
        this.corner = 360 - (0, _script.getCornerByPoints)(this.x + this.width / 2, _route.hero.x + _route.hero.width / 2, this.y + this.height / 2, _route.hero.y + _route.hero.height / 2);
        this.speed = _route.game.zombieTurboSpeed;
      } else {
        this.turbo = false;
        this.speed = this.oldSpeed;
      }
      if (_route.game.play !== "replay" && Math.abs(offsetX) < 20 && Math.abs(offsetY) < 20) _route.game.stop();
    }
  }]);

  return Zombie2;
}(_person.Person);

exports.Zombie2 = Zombie2;

},{"./person":8,"./route":9,"./script":10}]},{},[9]);
